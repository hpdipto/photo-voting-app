{"version":3,"sources":["home.components/error.component.js","home.components/success.component.js","home.components/login.component.js","home.components/register.component.js","Home.js","dashboard.components/error.component.js","dashboard.components/vote.component.js","dashboard.components/files.component.js","dashboard.components/create.component.js","dashboard.components/card.component.js","dashboard.components/cards.component.js","dashboard.components/success.component.js","dashboard.components/warning.component.js","dashboard.components/dashboard.component.js","dashboard.components/empty.component.js","Dashboard.js","poll.components/viewer.component.js","poll.components/gallery.component.js","poll.components/open.component.js","Poll.js","result.components/viewer.component.js","result.components/gallery.component.js","result.components/result.component.js","Result.js","vote.components/viewer.component.js","vote.components/gallery.component.js","vote.components/open.component.js","Vote.js","App.js","serviceWorker.js","index.js"],"names":["ErrorItem","message","useState","closeAlert","setCloseAlert","className","role","type","data-dismiss","aria-label","onClick","aria-hidden","SuccessItem","ErrorMessages","messages","map","em","index","key","SuccessMessages","axios","defaults","withCredentials","Login","login","setLogin","setRegister","register","setUser","user","errorMessages","setErrorMessages","successMessages","setSuccessMessages","history","useHistory","useEffect","formik","useFormik","initialValues","email","password","validate","values","test","validateOnChange","validateOnBlur","isValidating","onSubmit","length","post","then","res","responseData","data","hasOwnProperty","push","handleSubmit","style","backgroundColor","htmlFor","id","onChange","handleChange","value","Register","registerName","registerEmail","registerPassword","name","onClickLogin","catch","err","registerStatus","isNaN","Home","loginStatus","setLoginStatus","VoteForm","vote","setVote","pollId","pollPasscode","poll","_id","ShowFiles","files","setFiles","showModal","setShowModal","Modal","show","onHide","animation","centered","Header","closeButton","Body","file","src","preview","alt","fileIndex","array","splice","setFieldValue","removeFile","CreatePoll","setPoll","onDrop","useCallback","acceptedFiles","Object","assign","URL","createObjectURL","onDropRejected","rejectedFiles","alert","useDropzone","accept","getRootProps","getInputProps","isDragActive","pollTitle","maxVoteLimit","startDate","Date","setHours","endDate","images","getTime","formData","FormData","append","i","headers","selected","date","showTimeSelect","event","currentTarget","multiple","align","PollCard","toDateString","delete","CardRow","polls","setMessages","WarningItem","msg","WarningMessages","DashboardBody","successMessage","setSuccessMessage","warningMessage","setWarningMessage","pollCards","start","end","j","slice","EmptyDashboard","color","Dashboard","setPolls","source","CancelToken","a","get","cancelToken","token","response","isCancel","fetchData","cancel","console","log","ImageViewer","setShow","setIndex","votes","Carousel","activeIndex","onSelect","e","slide","indicators","interval","image","idx","Item","ImageSource","Gallery","modal","setModal","OpenPoll","dateformat","Poll","urlId","useLocation","pathname","lastIndexOf","imageList","points","ResultGallery","result","ResultPoll","Result","setImages","setVotes","votesLeft","setVotesLeft","disabled","v","Math","max","Vote","Array","fill","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bdb3246f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction ErrorItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ErrorItem;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction SuccessItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default SuccessItem;","import React, { useState, useEffect } from 'react';\nimport { useFormik } from \"formik\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\nimport SuccessItem from \"./success.component\";\n\n// eable axios cookies\naxios.defaults.withCredentials = true;\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction SuccessMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <SuccessItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction Login({login, setLogin, register, setRegister, user, setUser}) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    const [successMessages, setSuccessMessages] = useState([]);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // unauthorized user tried to access dashboard\n        // login  value was set from Dashboard.js\n        if(login === 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please login first']);\n        }\n\n        // user registered successfully\n        // login value was set from home.components/register.component.js\n        if(login === 4) {\n            setSuccessMessages(successMessages => [...successMessages, 'Registered successfully']);\n        }\n    }, [login]);   // included values to avoid warning\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if((!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))) {\n           setErrorMessages(errorMessages => [...errorMessages, 'Please enter a valid Email']); \n        }\n        if(!values.password) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Password']);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            // submit if there are no client side errors\n            if(errorMessages.length === 0) {\n                let user = {\n                    email: values.email,\n                    password: values.password\n                };\n\n                axios.post('/user/login', user, {withCredentials: true})\n                    .then(res => {\n                        let responseData = res.data;\n                        // if we had some error during login\n                        // from server we'll receive a json object with 'message' property\n                        if (responseData.hasOwnProperty('message')) {\n                            setErrorMessages(errorMessages => [...errorMessages, responseData['message']]);\n                        }\n                        // other wise the login is successful\n                        else {\n                            // successful login\n                            // set user globally\n                            setLogin(2);\n                            setUser(responseData);\n                            history.push(\"/dashboard\");\n                        }\n                    });\n            }\n        }\n\n    });\n    \n\n    // function for toggle register component\n    const onClickRegister = () => {\n        setRegister(true);\n        setLogin(0);\n    }\n\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"col-xs-6 m-auto\">\n                <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                    {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                    {successMessages.length ? <SuccessMessages messages={successMessages} /> : null}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.email}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.password}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    <p>Don't have an account? <button className=\"btn btn-link\" onClick={onClickRegister}>Register</button> </p>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default Login;","import React, { useState} from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\nfunction Register({ login, setLogin, register, setRegister }) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.registerName) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Name']);\n        }\n        if((!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.registerEmail))) {\n           setErrorMessages(errorMessages => [...errorMessages, 'Please enter a valid Email']); \n        }\n        if(!values.registerPassword) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Password']);\n        }\n        if(values.registerPassword.length < 6) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Password length should be at least 6']);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            registerName: '',\n            registerEmail: '',\n            registerPassword: '',\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            // submit if there are no client side errors\n            if(errorMessages.length === 0) {\n                let user = {\n                    name: values.registerName,\n                    email: values.registerEmail,\n                    password: values.registerPassword\n                };\n\n                axios.post('/user/add', user)\n                    .then(res => {\n                        // user registered successfully\n                        onClickLogin(4);\n                    })  \n                    .catch(err => setErrorMessages(errorMessages => [...errorMessages, 'Email already used']));\n            }\n        }\n\n    });\n\n    // function for toggle login component\n    const onClickLogin = (registerStatus) => {\n\n        if(isNaN(registerStatus))\n            registerStatus = 1;\n        \n        setLogin(registerStatus);\n        setRegister(false);\n    }\n\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n          <div className=\"col-xs-6 m-auto\">\n              <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                  {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                  <div className=\"form-group\">\n                      <label htmlFor=\"name\">Name</label>\n                      <input type=\"text\" id=\"registerName\" className=\"form-control\" value={formik.values.registerName} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <input type=\"email\" id=\"registerEmail\" className=\"form-control\" value={formik.values.registerEmail} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input type=\"password\" id=\"registerPassword\" className=\"form-control\" value={formik.values.registerPassword} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-info btn-block\">Register</button>\n                  </div>\n\n                  <p>Have an account? <button className=\"btn btn-link\" onClick={onClickLogin}>Login</button> </p>\n              </div>\n          </div>\n      </form>\n    );\n}\n\nexport default Register;","import React, { useState, useEffect } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Login from \"./home.components/login.component\";\nimport Register from \"./home.components/register.component\";\n\n\n\nfunction Home({ loginStatus, setLoginStatus, user, setUser }) {\n\n  // this states are used to toggle components\n  const [login, setLogin] = useState(loginStatus);\n  const [register, setRegister] = useState(false);\n  \n\n  useEffect(() => {\n    // value login is updated from loginStatus\n    // login == 2 denotes user logged in successfully\n    if(login === 2) {\n      // now all page can understand, a user is logged in\n      setLoginStatus(1);\n      // after a successful login, we set local state `login`'s value to 0\n      // so that the component will unmount\n      setLogin(0);\n    }\n\n    // login === -1 denotes, a user logged out successfully\n    // if a user logged out then we set the value of login to 0\n    // so that login component doesn't mount\n    if(login === -1) {\n      setLogin(0);\n    }\n  }, [login, setLoginStatus, setLogin]);\n\n\n  const loginClicked = () => {\n    setRegister(false);\n    // conditional toggling\n    login ? setLogin(0) : setLogin(1);\n  }\n\n  const registerClicked = () => {\n    setLogin(0);\n    register ? setRegister(false) : setRegister(true);\n  }\n\n  return (\n    <div className=\"row mt-5\">\n      <div className=\"col-md-6\">\n        <br />\n        <h1>Photo Poll</h1>\n      </div>\n\n      <div className=\"col-md-6\">\n        <br />\n        <div className=\"card card-body text-center\" style={{backgroundColor: \"transparent\"}}>\n          <div className=\"btn-group\">\n            <button className=\"btn btn-primary\" onClick={loginClicked}>Log In</button>\n            <button className=\"btn btn-info\" onClick={registerClicked}>Register</button>\n          </div>\n        </div>\n        <br />\n        {login ? <Login login={login} setLogin={setLogin} register={register} setRegister={setRegister} user={user} setUser={setUser} /> : null}\n        {register ? <Register login={login} setLogin={setLogin} register={register} setRegister={setRegister} /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction ErrorItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ErrorItem;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction VoteForm({ vote, setVote }) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    const history = useHistory();\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.pollId) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll ID']);\n        }\n        if(!values.pollPasscode) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll Passcode']);\n        }\n        \n\n    }\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            pollId: '',\n            pollPasscode: ''\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            if(errorMessages.length === 0) {\n                let poll = {\n                    pollId: values.pollId,\n                    pollPasscode: values.pollPasscode\n                };\n\n                axios.post('/vote/enter', poll)\n                    .then(res => {\n                        let responseData = res.data;\n                        // if we had some error during entering into a poll\n                        // from server we'll receive a json object with 'message' property\n                        if (responseData.hasOwnProperty('message')) {\n                            setErrorMessages(errorMessages => [...errorMessages, responseData['message']]);\n                        }\n                        // other wise the entering is successful\n                        else {\n                            // successful entering\n                            history.push(`/vote/${responseData._id}`);\n                        }\n                    })\n            }\n        }\n    })\n\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n\n                {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                <div className=\"form-group\">\n                    <label htmlFor=\"pollId\">Poll ID</label>\n                    <input type=\"text\" id=\"pollId\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.pollId}></input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"pollPasscode\">Poll Passcode</label>\n                    <input type=\"text\" id=\"pollPasscode\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.pollPasscode}></input>\n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Enter</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\n\nexport default VoteForm;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport \"../styles/imageGallery.css\";\n\n\nfunction ShowFiles({ files, setFiles, showModal, setShowModal, formik }) {\n\n    // on remove file we remove file from fileList state\n    // and also remove file from formik \"images\" field\n    const removeFile = (fileIndex) => {\n      var array = [...files];\n      array.splice(fileIndex, 1);\n      setFiles([...array]);\n      formik.setFieldValue(\"images\", [...array]);\n    }\n\n    return (\n        <div>\n            {/*animation={false} for avoid a warning*/}\n            <Modal show={showModal} onHide={() => setShowModal(!showModal)} animation={false} centered>\n\n              <Modal.Header closeButton>\n              </Modal.Header>\n\n              <Modal.Body>\n              <div className=\"gallery\">\n                    {files.map((file, index) => {\n                        return (\n                            <div key={index} className=\"mb-3\" id=\"photo\">\n                                <div className=\"card\">\n                                    <img className=\"img-fluid\" src={file.preview} alt={`image_${index}`} />\n                                    <button className=\"btn\" onClick={() => removeFile(index)}><i className=\"fa fa-trash-o\" /> Remove</button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n              </Modal.Body>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ShowFiles;","import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useDropzone } from 'react-dropzone';\nimport { Modal } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// font awesome source: https://stackoverflow.com/a/44985218/9481106\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"../styles/createPoll.css\";\n\nimport ErrorItem from \"./error.component\";\nimport ShowFiles from \"./files.component\";\n\n// resource that helped a lot for react-dropzone\n// https://blog.logrocket.com/create-a-drag-and-drop-component-with-react-dropzone/\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction CreatePoll({ loginStatus, setLoginStatus, poll, setPoll }) {\n\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    // const [fileList, setFileList] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n\n\n    // On drop file in the field, we update fileList state\n    // and add files to formik \"images\" field\n    const onDrop = useCallback(acceptedFiles => {\n      // file preview source: https://github.com/react-dropzone/react-dropzone/tree/master/examples/previews\n      acceptedFiles.map(file => {\n        Object.assign(file, {preview: URL.createObjectURL(file)});\n        setFiles(files => [...files, file]);\n      });\n\n      formik.setFieldValue(\"images\", [...files, ...acceptedFiles]);\n    });\n\n    // console.log(files);\n\n    \n    // non images are bounced\n    const onDropRejected = useCallback(rejectedFiles => {\n      alert(`Non image files are ignored!`);\n    });\n\n\n    // on remove file we remove file from fileList state\n    // and also remove file from formik \"images\" field\n    // const removeFile = (fileIndex) => {\n    //   var array = [...files];\n    //   array.splice(fileIndex, 1);\n    //   setFileList([...array]);\n    //   formik.setFieldValue(\"images\", [...array]);\n    // }\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, onDropRejected, accept: 'image/*'});\n\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.pollTitle) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll Title']);\n        }\n        if(values.pollId.length < 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Poll Id should have at least 3 characters']);\n        }\n        if(values.pollPasscode.length < 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Poll Passcode should have at least 3 characters']);\n        }\n        if(values.maxVoteLimit === 0) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Maximum Vote Limit can not be 0']);\n        }\n        if(values.startDate.getTime() === values.endDate.getTime()) {\n            setErrorMessages(errorMessages => [...errorMessages, \"Start Date and End Date can't be equal\"]);\n        }\n        if(values.startDate.getTime() > values.endDate.getTime()) {\n            setErrorMessages(errorMessages => [...errorMessages, \"Start Time can't be greater than End Time\"]);\n        }\n        if(values.maxVoteLimit > values.images.length) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Maximum Vote Limit can not be larger than uploaded images']);\n        }\n        if(values.images === null || values.images.length < 2) {\n          setErrorMessages(errorMessages => [...errorMessages, \"Please upload 2 or more files\"]);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n      initialValues: {\n        pollTitle: '',\n        pollId: '',\n        pollPasscode: '',\n        maxVoteLimit: 0,\n        // set to midnight\n        // source: https://stackoverflow.com/a/30100627/9481106\n        startDate: new Date(new Date().setHours(0,0,0,0)),\n        endDate: new Date(new Date().setHours(0,0,0,0)),\n        images: null\n      },\n      validate,\n      // validation will be happened during submission\n      validateOnChange: false,\n      validateOnBlur: false,\n      isValidating: true,\n      onSubmit: values => {\n        if(errorMessages.length === 0) {\n\n          var formData = new FormData();\n          formData.append(\"pollTitle\", values.pollTitle);\n          formData.append(\"pollId\", values.pollId);\n          formData.append(\"pollPasscode\", values.pollPasscode);\n          formData.append(\"maxVoteLimit\", values.maxVoteLimit);\n          formData.append(\"startDate\", values.startDate);\n          formData.append(\"endDate\", values.endDate);\n          \n          for(var i = 0; i < values.images.length; i++) {\n            formData.append(`images[${i}]`, values.images[i], values.images[i].name);\n          }\n\n          // source: https://stackoverflow.com/a/43014086/9481106\n          axios.post('/poll/create', formData, { headers: {'content-type': 'multipart/form-data'}})\n              // poll created successfully\n              .then(res => {\n                // after poll created successfully\n                // setPoll value to 2, to unmount createPoll component\n                // loginStatus to 5, to display flash message\n                setPoll(2);\n                setLoginStatus(5);\n              })\n              .catch(err => setErrorMessages(errorMessages => [...errorMessages, 'Poll Id already taken, please use a new one']));\n        }\n      }\n    });\n\n    \n\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n\n          {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n\n          <div className=\"form-group\">\n              <label htmlFor=\"pollTitle\">Poll Title</label>\n              <input type=\"text\" id=\"pollTitle\" className=\"form-control\" value={formik.values.pollTitle} onChange={formik.handleChange}/>\n          </div>\n\n          <div className=\"form-row\"> \n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"pollId\">Poll ID</label>\n                <input type=\"text\" id=\"pollId\" className=\"form-control\" value={formik.values.pollId} onChange={formik.handleChange}/>\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"pollPasscode\">Poll Passcode</label>\n                <input type=\"text\" id=\"pollPasscode\" className=\"form-control\" value={formik.values.pollPasscode} onChange={formik.handleChange} />\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"maxVoteLimit\">Maximum Vote Limit</label>\n                <input type=\"number\" id=\"maxVoteLimit\" className=\"form-control\" value={formik.values.maxVoteLimit} onChange={formik.handleChange} />\n              </div>\n          </div>\n\n          <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"startDate\">Start Date</label>\n                <br />\n                {/*handling DatePicker with Formik*/}\n                {/* source: https://stackoverflow.com/a/52273407/9481106*/}\n                <DatePicker id=\"startDate\" className=\"form-control\" value={formik.values.startDate} selected={formik.values.startDate} onChange={date => formik.setFieldValue(\"startDate\", date)} showTimeSelect={true} />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"endDate\">End Date</label>\n                <br />\n                <DatePicker id=\"endDate\" className=\"form-control\" value={formik.values.endDate} selected={formik.values.endDate} onChange={date => formik.setFieldValue(\"endDate\", date)} showTimeSelect />\n              </div>\n          </div>\n\n          {/* Drag and Drop section */}\n          <div className=\"form-group\">\n            <label htmlFor=\"images\">Upload Images</label>\n            <div className={\"form-control dnd \" + (isDragActive ? \"dnd-focus\" : \"\") } {...getRootProps()}>\n              {/* source: https://stackoverflow.com/a/56161034/9481106 */}\n              <input {...getInputProps()} type=\"file\" id=\"images\" name=\"images\" onChange={event => formik.setFieldValue(\"images\", event.currentTarget.files)} multiple />\n              <div className=\"icon mt-4 mb-2\">\n                <i className=\"fa fa-5x fa-align-justify fa-upload\" aria-hidden=\"true\"></i>\n              </div>\n              <p align=\"center\">Drop images here or click to upload</p>\n            </div>\n          </div>\n\n          {/* Display file list */}\n          {/*<div className=\"form-group\">\n            <ul className=\"list-group\">\n              {fileList.length > 0 && fileList.map((file, index) => (\n                <li key={index} className=\"list-group-item list-group-item-success d-flex justify-content-between align-items-center\">\n                  {file.name}\n                  <button className=\"btn btn-close\" onClick={() => removeFile(index)}><i className=\"fa fa-trash-o\" /></button>\n                </li>\n              ))}\n            </ul>\n          </div>*/}\n          <div className=\"form-group\">\n            <button type=\"button\" className=\"btn btn-link\" onClick={() => setShowModal(!showModal)}>{files.length} items added</button>\n            {showModal ? <ShowFiles files={files} setFiles={setFiles} showModal={showModal} setShowModal={setShowModal} formik={formik} /> : null}\n          </div>\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-info btn-block\" onClick={formik.handleSubmit} >Create Poll</button>\n          </div>\n\n        </div>\n      </form>\n    );\n}\n\n\nexport default CreatePoll;","import React from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction PollCard({ loginStatus, setLoginStatus, id, pollTitle, pollId, startDate, endDate }) {\n\n    const history = useHistory();\n\n    const openPoll = () => {\n        history.push(`/poll/${id}`);\n    }\n\n    const deletePoll = () => {\n        axios.delete(`/poll/${id}`)\n                .then(res => {\n                    // after a poll deleted successfully\n                    // setLoginStatus = 6\n                    setLoginStatus(6);\n                });\n    }\n\n    return (\n        <div className=\"card\" style={{backgroundColor: \"transparent\"}}>\n            <div className=\"card-header\">\n                <h5 className=\"card-title\">{pollTitle}</h5>\n                <h6 className=\"card-subtitle mb-2 text-muted\">{pollId}</h6>\n            </div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">Start: {startDate.toDateString()}</p>\n                <p className=\"card-text\">End: {endDate.toDateString()}</p>\n            </div>\n            <div className=\"card-footer text-center\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button className=\"btn btn-sm\" onClick={openPoll}><i className=\"fa fa-external-link\"></i> Open</button>\n                    </div>\n                    <div className=\"col\">\n                        <button className=\"btn btn-sm\" onClick={deletePoll}><i className=\"fa fa-trash-o\" /> Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PollCard;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport PollCard from './card.component';\n\n\n// we will pass 4 polls to render in a row\n\nfunction CardRow({ loginStatus, setLoginStatus, polls }) {\n\n    return(\n        <div className=\"row\">\n            <div className=\"col-lg-3 mb-4\">            \n                {/*if 1 poll exists*/}\n                {0 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[0]._id} pollTitle={polls[0].pollTitle} pollId={polls[0].pollId} startDate={new Date(polls[0].startDate)} endDate={new Date(polls[0].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">                  \n                {/*if 2 polls exist*/}\n                {1 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[1]._id} pollTitle={polls[1].pollTitle} pollId={polls[1].pollId} startDate={new Date(polls[1].startDate)} endDate={new Date(polls[1].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">\n                {/*if 3 polls exist*/}\n                {2 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[2]._id} pollTitle={polls[2].pollTitle} pollId={polls[2].pollId} startDate={new Date(polls[2].startDate)} endDate={new Date(polls[2].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">\n                {/*if 4 polls exist*/}\n                {3 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[3]._id} pollTitle={polls[3].pollTitle} pollId={polls[3].pollId} startDate={new Date(polls[3].startDate)} endDate={new Date(polls[3].endDate)} /> :\n                    null\n                }\n           </div>\n        </div>        \n    );\n}\n\n\nexport default CardRow;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction SuccessItem({ loginStatus, setLoginStatus, messages, setMessages}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n\n        // back to normal state again\n        // and clearning messages\n        setLoginStatus(2);\n        setMessages([]);\n    }\n\n    if(!closeAlert) {\n\n        return (\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                {messages}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default SuccessItem;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction WarningItem({ loginStatus, setLoginStatus, messages, setMessages}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n\n        // back to normal state again\n        // and clearning messages\n        setLoginStatus(2);\n        setMessages([]);\n    }\n\n    if(!closeAlert) {\n\n        return (\n            <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\n                {messages}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default WarningItem;","import React, { useState, useEffect } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport CardRow from './cards.component';\nimport SuccessItem from './success.component';\nimport WarningItem from './warning.component';\n\n\nfunction SuccessMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <SuccessItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction WarningMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <WarningItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\n\n\n\nfunction DashboardBody({ loginStatus, setLoginStatus, polls }) {\n\n    const [successMessage, setSuccessMessage] = useState([]);\n    const [warningMessage, setWarningMessage] = useState([]);\n\n    useEffect(() => {\n\n        // loginStatus 4 denotes vote successfully completed\n        // this value was set in /vote.component/open.component\n        if(loginStatus === 4) {\n            setSuccessMessage(successMessage => [...successMessage, 'Vote completed successfully']);\n        }\n\n        // loginStatus 5 denotes a poll successfully created\n        // this value was set in /dashboard.component/create.component\n        if(loginStatus === 5) {\n            setSuccessMessage(successMessage => [...successMessage, 'Poll created successfully']);\n        }\n\n        //loginStatus 6 denotes a poll successfully deleted\n        // this value was set in /dashboard.component/card.component\n        if(loginStatus === 6) {\n            setWarningMessage(warningMessage => [...warningMessage, 'Poll deleted successfully']);\n        }\n\n    }, []);\n    \n\n    // passing 4 polls at a time\n    // CardRow will contain 4 polls in a row\n    var pollCards = [];\n    for (var i = 0; i < polls.length; i+=4) {\n        var start = i;\n        var end = i + 4;\n        end > polls.length ? end = polls.length : end = i + 4;\n\n        var key = [];\n        for(var j = start; j < end; j++) {\n            key.push(j);\n        }\n\n        pollCards.push(<CardRow loginStatus={loginStatus} setLoginStatus={setLoginStatus} key={i} polls={polls.slice(start, end)} />);\n    }\n\n    return (\n        <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            {successMessage.length ? <SuccessMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={successMessage} setMessages={setSuccessMessage} /> : null}\n            {warningMessage.length ? <WarningMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={warningMessage} setMessages={setWarningMessage} /> : null}\n            {pollCards}\n        </div>\n    );\n}\n\n\nexport default DashboardBody;","import React, { useState, useEffect } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport SuccessItem from './success.component';\nimport WarningItem from './warning.component';\n\n\nfunction SuccessMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <SuccessItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\nfunction WarningMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <WarningItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction EmptyDashboard({ loginStatus, setLoginStatus }) {\n\n    const [successMessage, setSuccessMessage] = useState([]);\n    const [warningMessage, setWarningMessage] = useState([]);\n\n    useEffect(() => {\n        // loginStatus 4 denotes vote successfully completed\n        // this value was set in /vote.component/open.component\n        if(loginStatus === 4) {\n            setSuccessMessage(successMessage => [...successMessage, 'Vote completed successfully']);\n        }\n\n        // loginStatus 5 denotes a poll successfully created\n        // this value was set in /dashboard.component/create.component\n        if(loginStatus === 5) {\n            setSuccessMessage(successMessage => [...successMessage, 'Poll created successfully']);\n        }\n\n        //loginStatus 6 denotes a poll successfully deleted\n        // this value was set in /dashboard.component/card.component\n        if(loginStatus === 6) {\n            setWarningMessage(warningMessage => [...warningMessage, 'Poll deleted successfully']);\n        }\n\n    }, [loginStatus]);\n\n\n    return (\n        <div className=\"card card-body text-center\" style={{backgroundColor: \"transparent\"}}>\n            {successMessage.length ? <SuccessMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={successMessage} setMessages={setSuccessMessage} /> : null}\n            {warningMessage.length ? <WarningMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={warningMessage} setMessages={setWarningMessage} /> : null}\n            <h4 style={{color: \"#385482\"}}>No polls to display!</h4>\n        </div>\n    );\n\n}\n\nexport default EmptyDashboard;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nimport VoteForm from \"./dashboard.components/vote.component\";\nimport CreatePoll from \"./dashboard.components/create.component\";\nimport DashboardBody from \"./dashboard.components/dashboard.component\";\nimport EmptyDashboard from \"./dashboard.components/empty.component\";\n\n\nfunction Dashboard({ loginStatus, setLoginStatus, user, setUser }) {\n\n  const [vote, setVote] = useState(0);\n  const [poll, setPoll] = useState(0);\n  const [polls, setPolls] = useState([]);\n  const history = useHistory();\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access dashboard\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/poll', {\n          cancelToken: source.token\n        });\n        setPolls(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n\n    // after a poll successfully created, unmount create poll component\n    if(poll === 2) {\n      setPoll(0);\n    }\n\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, [loginStatus, setLoginStatus, history, poll, polls]);   // included  values to avoid warning\n\n\n\n  const voteForm = () => {\n    vote === 1 ? setVote(0) : setVote(1);\n    setPoll(0);\n  }\n\n\n\n  const createPoll = () => {\n    poll === 1 ? setPoll(0) : setPoll(1);\n    setVote(0);\n  }\n\n\n\n  const logOut = () => {\n    axios.get('/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // also set user object to empty {}\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div className=\"container\">\n      {/*nav bar*/}\n      <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n        <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n          <p className=\"navbar-brand\"> Dashboard for {user.name} </p>\n          <div className=\"btn-group\">\n            <button onClick={voteForm} className=\"btn btn-outline-primary\">Vote</button>\n            <button onClick={createPoll} className=\"btn btn-outline-info\">Create</button>\n            <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n          </div>\n        </nav>\n      </div>\n\n      <br />\n\n      <div>\n        {vote ? <VoteForm vote={vote} setVote={setVote} /> : null}\n      </div>\n\n\n      <div>\n        {poll ? <CreatePoll loginStatus={loginStatus} setLoginStatus={setLoginStatus} poll={poll} setPoll={setPoll} /> : null}\n      </div>\n\n\n      <div>\n        {polls.length ? \n          <DashboardBody loginStatus={loginStatus} setLoginStatus={setLoginStatus} polls={polls} /> : \n          <EmptyDashboard loginStatus={loginStatus} setLoginStatus={setLoginStatus} />\n        }\n      </div>\n    </div>\n    \n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\nfunction ImageViewer({ show, setShow, images, index, setIndex }) {\n\n    return (\n        <div>\n          {/*animation={false} for avoid a warning*/}\n          <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n            <Modal.Header closeButton>\n              {/*update from here*/}\n              {\"Vote Recived: \" + images[index].votes.length}\n            </Modal.Header>\n\n            <Modal.Body>\n              <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n                { images.map((image, idx) => {\n                  return (\n                    <Carousel.Item key={idx}>\n                      <img className='img-fluid' src={ImageSource.src+image['src']} alt={`image_${idx}`}/>\n                    </Carousel.Item>\n                  );\n                }) }\n                </Carousel>\n            </Modal.Body>\n          </Modal>\n        </div>\n    );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport \"../styles/imageGallery.css\";\n\nimport ImageViewer from \"./viewer.component\";\n\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\n// photo gallery source: https://mdbootstrap.com/plugins/jquery/gallery/#filter\nfunction Gallery({ images }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx)\n    }\n\n    return (\n        <div>\n            <div className=\"gallery\">\n                {images.map((image, index) => {\n                    return (\n                        <div key={index} className=\"mb-3\" id=\"photo\">\n                            <img className=\"img-fluid\" onClick={() => openModal(index)} src={ImageSource.src+image['src']} alt={`image_${index}`} />\n                        </div>\n                    );\n                })}\n            </div>\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} images={images} index={index} setIndex={setIndex} /> : null}\n\n        </div>\n    );\n}\n\nexport default Gallery;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// using dateformat to display nice format date\n// source: https://stackoverflow.com/a/3552496/9481106\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport Gallery from \"./gallery.component\";\n\n\nfunction OpenPoll({ poll, images }) {\n\n    const history = useHistory();\n\n    const getResult = () => {\n        history.push(`/poll/result/${poll._id}`);\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Id</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollId}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Passcode</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollPasscode}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                    </dl>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={getResult}>Result</button>\n                        </div>\n                    </div>\n                </div>\n\n                {images ? <Gallery images={images} /> : null}\n            </div>\n        </div>\n    );\n};\n\n\nexport default OpenPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport OpenPoll from './poll.components/open.component';\n\n\nfunction Poll({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [pollId, setPollId] = useState(urlId);\n  const [poll, setPoll] = useState({});\n  const history = useHistory();\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/poll/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, []);   // included  values to avoid warning\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n  const logOut = () => {\n    axios.get('/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div>\n        <div className=\"container\">\n          {/*nav bar*/}\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n              <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n              <div className=\"btn-group\">\n                <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n                <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n              </div>\n            </nav>\n          </div>\n\n          <br />\n        </div>\n\n        <div className=\"container-fluid\">\n          <OpenPoll poll={poll} images={poll.imageList} />\n        </div>\n    </div>\n    \n  );\n}\n\nexport default Poll;\n","import React from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\nfunction ImageViewer({ show, setShow, images, index, setIndex }) {\n\n    return (\n        <div>\n          {/*animation={false} for avoid a warning*/}\n          <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n            <Modal.Header closeButton>\n              <p>Points: {images[index].points} | Vote Recived: {images[index].votes}</p>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n                { images.map((image, idx) => {\n                  return (\n                    <Carousel.Item key={idx}>\n                      <img className='img-fluid' src={ImageSource.src+image['src']} alt={`image_${idx}`}/>\n                    </Carousel.Item>\n                  );\n                }) }\n                </Carousel>\n            </Modal.Body>\n          </Modal>\n        </div>\n    );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\n\nimport ImageViewer from \"./viewer.component\";\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\n// result image and text display source: https://stackoverflow.com/a/42252877/9481106\nfunction ResultGallery({ result }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx)\n    }\n\n    return (\n        <div>\n            {result.map((image, index) => {\n                return (\n                    <div className=\"card mb-3\" onClick={() => openModal(index)} style={{backgroundColor: \"transparent\"}} key={index}>\n                        <div className=\"row d-flex\">\n                            <div className=\"col-sm-6\">\n                                <img className=\"img-fluid\" src={ImageSource.src+image.src} alt={`image_${index}`}/>\n                            </div>\n                            <div className=\"col-sm-6 align-self-center\">\n                                <h5>Points: {image.points}</h5>\n                                <h5>Votes Received: {image.votes}</h5>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} images={result} index={index} setIndex={setIndex} /> : null}\n        </div>\n    );\n}\n\nexport default ResultGallery;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// using dateformat to display nice format date\n// source: https://stackoverflow.com/a/3552496/9481106\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport ResultGallery from \"./gallery.component\";\n\n\nfunction ResultPoll({ poll, result }) {\n\n    const history = useHistory();\n\n    const getPoll = () => {\n        history.push(`/poll/${poll._id}`);\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Id</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollId}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Passcode</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollPasscode}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                    </dl>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={getPoll}>Poll</button>\n                        </div>\n                    </div>\n                </div>\n\n                \n                <div className=\"container\">\n                    {result ? <ResultGallery result={result} /> : null}\n                </div>\n                \n            </div>\n        </div>\n    );\n};\n\n\nexport default ResultPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ResultPoll from './result.components/result.component';\n\n\nfunction Result({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [pollId, setPollId] = useState(urlId);\n  const [poll, setPoll] = useState({});\n  const history = useHistory();\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/poll/result/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, []);   // included  values to avoid warning\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n  const logOut = () => {\n    axios.get('/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div>\n        <div className=\"container\">\n          {/*nav bar*/}\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n              <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n              <div className=\"btn-group\">\n                <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n                <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n              </div>\n            </nav>\n          </div>\n\n          <br />\n        </div>\n\n        <div className=\"container-fluid\">\n          <ResultPoll poll={poll} result={poll.result} />\n        </div>\n    </div>\n    \n  );\n}\n\nexport default Result;\n","import React, { useState } from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\nfunction ImageViewer({ show, setShow, index, setIndex, images, setImages, votes, setVotes, votesLeft, setVotesLeft }) {\n\n  const increaseVote = () => {\n    if(votesLeft > 0) {\n      var v = [...votes];\n      v[index] = Math.max(...votes) + 1;\n      setVotes(v);\n      setVotesLeft(votesLeft-1);\n    }\n  }\n\n\n  return (\n      <div>\n        {/*animation={false} for avoid a warning*/}\n        <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n          <Modal.Header closeButton>\n            <button type=\"button\"\n                    className=\"btn btn-primary btn-block\" \n                    disabled={(votes[index] || !votesLeft) ? true : false}\n                    onClick={increaseVote} >\n              {/*if the image is not voted and votes left still then button value should be MaxVote+1\n                 if the image is not voted and no votes left, buttion value should be 'No vote left'\n                 else button value currentVote*/}\n              {!votes[index] ? (votesLeft ? Math.max(...votes) + 1 : 'No vote left') : votes[index]}\n            </button>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n              { images.map((image, idx) => {\n                return (\n                  <Carousel.Item key={idx}>\n                    <img className='img-fluid' src={ImageSource.src+image['src']} alt={`image_${idx}`}/>\n                  </Carousel.Item>\n                );\n              }) }\n              </Carousel>\n          </Modal.Body>\n        </Modal>\n      </div>\n  );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport \"../styles/imageGallery.css\";\n\n// loading backend source\nimport ImageSource from \"../ImageSource.json\";\n\n\nimport ImageViewer from \"./viewer.component\";\n\n\n\n// photo gallery source: https://mdbootstrap.com/plugins/jquery/gallery/#filter\nfunction Gallery({ imageList, maxVoteLimit, votes, setVotes, votesLeft, setVotesLeft }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [images, setImages] = useState(imageList);\n\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx);\n    }\n\n    return (\n        <div>\n            <div className=\"gallery\">\n                {images.map((image, index) => {\n                    return (\n                        <div key={index} className=\"mb-3\" id=\"photo\">\n                            <img className=\"img-fluid\" onClick={() => openModal(index)} src={ImageSource.src+image['src']} alt={`image_${index}`} />\n                        </div>\n                    );\n                })}\n            </div>\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} \n                                  index={index} setIndex={setIndex} \n                                  images={images} setImages={setImages} \n                                  votes={votes} setVotes={setVotes}\n                                  votesLeft={votesLeft} setVotesLeft={setVotesLeft} /> \n                    : null}\n\n        </div>\n    );\n}\n\nexport default Gallery;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Gallery from \"./gallery.component\";\n\n\nfunction OpenPoll({ loginStatus, setLoginStatus, poll, imageList, votes, setVotes, votesLeft, setVotesLeft }) {\n\n    const history = useHistory();\n\n    const submitVotes = () => {\n\n        // vote backend\n        axios.post(`/vote/poll/${poll._id}`, votes)\n            .then(res => {\n                // loginStatus 4 denotes, a vote complete successfully\n                setLoginStatus(4);\n                history.push('/dashboard');\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Votes Left</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{votesLeft}</span></dd>\n                    </dl>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={submitVotes}>Submit</button>\n                        </div>\n                    </div>\n                </div>            \n\n                {imageList ? \n                            <Gallery imageList={imageList} maxVoteLimit={poll.maxVoteLimit}\n                                      votes={votes} setVotes={setVotes}\n                                      votesLeft={votesLeft} setVotesLeft={setVotesLeft} />\n                            :\n                            null\n                }\n\n            </div>\n        </div>\n    );\n};\n\n\nexport default OpenPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport OpenPoll from './vote.components/open.component';\n\n\nfunction Vote({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [pollId, setPollId] = useState(urlId);\n  const [poll, setPoll] = useState({});\n  const [votes, setVotes] = useState([]);\n  const [votesLeft, setVotesLeft] = useState(0);\n\n  const history = useHistory();\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `response` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/vote/poll/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n        // array initialization with 0s: https://stackoverflow.com/a/34104348/9481106\n        setVotes(Array(response.data.imageList.length).fill(0));\n        setVotesLeft(response.data.maxVoteLimit);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, []);   // included  values to avoid warning\n\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n\n  const logOut = () => {\n    axios.get('/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div>\n        <div className=\"container\">\n          {/*nav bar*/}\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n              <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n              <div className=\"btn-group\">\n                <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n                <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n              </div>\n            </nav>\n          </div>\n\n          <br />\n        </div>\n\n        <div className=\"container\">\n          <OpenPoll loginStatus={loginStatus} setLoginStatus={setLoginStatus}\n                    poll={poll} imageList={poll.imageList} \n                    votes={votes} setVotes={setVotes}\n                    votesLeft={votesLeft} setVotesLeft={setVotesLeft} />\n        </div>\n    </div>\n    \n  );\n}\n\nexport default Vote;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nimport Poll from \"./Poll\";\nimport Result from \"./Result\";\nimport Vote from \"./Vote\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n\n  const [login, setLogin] = useState(0);\n  const [user, setUser] = useState({});\n\n  return (\n    <Router>\n      <Route exact path=\"/\" component={() => <Home loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser}/>} />\n      <Route exact path=\"/dashboard\" \n              component={() => <Dashboard loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser}/>} />\n      <Route exact path=\"/poll/:id\" component={() => <Poll loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n      <Route exact path=\"/poll/result/:id\" component={() => <Result loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n      <Route exact path=\"/vote/:id\" component={() => <Vote loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}