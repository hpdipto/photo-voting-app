{"version":3,"sources":["undraw_voting_nvu7.svg","home.components/error.component.js","home.components/success.component.js","home.components/login.component.js","home.components/register.component.js","Home.js","dashboard.components/error.component.js","dashboard.components/vote.component.js","dashboard.components/files.component.js","dashboard.components/create.component.js","dashboard.components/card.component.js","dashboard.components/cards.component.js","dashboard.components/success.component.js","dashboard.components/warning.component.js","dashboard.components/dashboard.component.js","dashboard.components/empty.component.js","Dashboard.js","poll.components/viewer.component.js","poll.components/gallery.component.js","poll.components/open.component.js","Poll.js","result.components/viewer.component.js","result.components/gallery.component.js","result.components/result.component.js","Result.js","vote.components/viewer.component.js","vote.components/gallery.component.js","vote.components/open.component.js","Vote.js","App.js","index.js"],"names":["module","exports","ErrorItem","message","useState","closeAlert","setCloseAlert","className","role","type","data-dismiss","aria-label","onClick","aria-hidden","SuccessItem","ErrorMessages","messages","map","em","index","key","SuccessMessages","axios","defaults","withCredentials","Login","login","setLogin","setRegister","register","setUser","user","errorMessages","setErrorMessages","successMessages","setSuccessMessages","history","useHistory","useEffect","formik","useFormik","initialValues","email","password","validate","values","test","validateOnChange","validateOnBlur","isValidating","onSubmit","length","post","then","res","responseData","data","hasOwnProperty","push","handleSubmit","style","backgroundColor","htmlFor","id","onChange","handleChange","value","Register","registerName","registerEmail","registerPassword","name","onClickLogin","catch","err","registerStatus","isNaN","Home","loginStatus","setLoginStatus","fontFamily","marginTop","src","pic","alt","width","height","VoteForm","vote","setVote","pollId","pollPasscode","poll","_id","ShowFiles","files","setFiles","showModal","setShowModal","Modal","show","onHide","animation","centered","Header","closeButton","Body","file","preview","fileIndex","array","splice","setFieldValue","removeFile","CreatePoll","setPoll","uploadProgress","setUploadProgress","submit","setSubmit","pollTitle","maxVoteLimit","startDate","Date","setHours","endDate","images","getTime","formData","FormData","append","i","headers","onUploadProgress","progressEvent","uploadPercentage","Math","floor","loaded","total","onDrop","useCallback","acceptedFiles","forEach","Object","assign","URL","createObjectURL","onDropRejected","rejectedFiles","alert","useDropzone","accept","getRootProps","getInputProps","isDragActive","selected","date","showTimeSelect","event","currentTarget","Array","from","multiple","align","color","ProgressBar","now","label","variant","disabled","PollCard","toDateString","delete","CardRow","polls","setMessages","WarningItem","msg","WarningMessages","DashboardBody","successMessage","setSuccessMessage","warningMessage","setWarningMessage","pollCards","start","end","j","slice","EmptyDashboard","Dashboard","setPolls","source","CancelToken","a","get","cancelToken","token","response","isCancel","fetchData","cancel","console","log","ImageViewer","setShow","setIndex","votes","Carousel","activeIndex","onSelect","e","slide","indicators","interval","image","idx","Item","Gallery","modal","setModal","OpenPoll","dateformat","Poll","urlId","useLocation","pathname","lastIndexOf","imageList","points","ResultGallery","result","ResultPoll","Result","setImages","setVotes","votesLeft","setVotesLeft","v","max","setReset","reset","Vote","setMaxVoteLimit","imageListLength","setImageListLength","fill","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e481a75c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_voting_nvu7.d03996ea.svg\";","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction ErrorItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ErrorItem;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction SuccessItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default SuccessItem;","import React, { useState, useEffect } from 'react';\nimport { useFormik } from \"formik\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\nimport SuccessItem from \"./success.component\";\n\n// eable axios cookies\naxios.defaults.withCredentials = true;\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction SuccessMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <SuccessItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction Login({login, setLogin, register, setRegister, user, setUser}) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    const [successMessages, setSuccessMessages] = useState([]);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // unauthorized user tried to access dashboard\n        // login  value was set from Dashboard.js\n        if(login === 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please login first']);\n        }\n\n        // user registered successfully\n        // login value was set from home.components/register.component.js\n        if(login === 4) {\n            setSuccessMessages(successMessages => [...successMessages, 'Registered successfully']);\n        }\n    }, [login]);   // included values to avoid warning\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if((!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))) {\n           setErrorMessages(errorMessages => [...errorMessages, 'Please enter a valid Email']); \n        }\n        if(!values.password) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Password']);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            // submit if there are no client side errors\n            if(errorMessages.length === 0) {\n                let user = {\n                    email: values.email,\n                    password: values.password\n                };\n\n                axios.post('/api/user/login', user, {withCredentials: true})\n                    .then(res => {\n                        let responseData = res.data;\n                        // if we had some error during login\n                        // from server we'll receive a json object with 'message' property\n                        if (responseData.hasOwnProperty('message')) {\n                            setErrorMessages(errorMessages => [...errorMessages, responseData['message']]);\n                        }\n                        // other wise the login is successful\n                        else {\n                            // successful login\n                            // set user globally\n                            setLogin(2);\n                            setUser(responseData);\n                            history.push(\"/dashboard\");\n                        }\n                    });\n            }\n        }\n\n    });\n    \n\n    // function for toggle register component\n    const onClickRegister = () => {\n        setRegister(true);\n        setLogin(0);\n    }\n\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"col-xs-6 m-auto\">\n                <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                    {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                    {successMessages.length ? <SuccessMessages messages={successMessages} /> : null}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.email}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.password}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    <p>Don't have an account? <button className=\"btn btn-link\" onClick={onClickRegister}>Register</button> </p>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default Login;","import React, { useState} from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\nfunction Register({ login, setLogin, register, setRegister }) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.registerName) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Name']);\n        }\n        if((!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.registerEmail))) {\n           setErrorMessages(errorMessages => [...errorMessages, 'Please enter a valid Email']); \n        }\n        if(!values.registerPassword) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Password']);\n        }\n        if(values.registerPassword.length < 6) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Password length should be at least 6']);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            registerName: '',\n            registerEmail: '',\n            registerPassword: '',\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            // submit if there are no client side errors\n            if(errorMessages.length === 0) {\n                let user = {\n                    name: values.registerName,\n                    email: values.registerEmail,\n                    password: values.registerPassword\n                };\n\n                axios.post('/api/user/add', user)\n                    .then(res => {\n                        // user registered successfully\n                        onClickLogin(4);\n                    })  \n                    .catch(err => setErrorMessages(errorMessages => [...errorMessages, 'Email already used']));\n            }\n        }\n\n    });\n\n    // function for toggle login component\n    const onClickLogin = (registerStatus) => {\n\n        if(isNaN(registerStatus))\n            registerStatus = 1;\n        \n        setLogin(registerStatus);\n        setRegister(false);\n    }\n\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n          <div className=\"col-xs-6 m-auto\">\n              <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                  {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                  <div className=\"form-group\">\n                      <label htmlFor=\"name\">Name</label>\n                      <input type=\"text\" id=\"registerName\" className=\"form-control\" value={formik.values.registerName} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <input type=\"email\" id=\"registerEmail\" className=\"form-control\" value={formik.values.registerEmail} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input type=\"password\" id=\"registerPassword\" className=\"form-control\" value={formik.values.registerPassword} onChange={formik.handleChange}></input>\n                  </div>\n                  <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-info btn-block\">Register</button>\n                  </div>\n\n                  <p>Have an account? <button className=\"btn btn-link\" onClick={onClickLogin}>Login</button> </p>\n              </div>\n          </div>\n      </form>\n    );\n}\n\nexport default Register;","import React, { useState, useEffect } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Login from \"./home.components/login.component\";\nimport Register from \"./home.components/register.component\";\n\nimport pic from \"./undraw_voting_nvu7.svg\";\n\n\nfunction Home({ loginStatus, setLoginStatus, user, setUser }) {\n\n  // this states are used to toggle components\n  const [login, setLogin] = useState(loginStatus);\n  const [register, setRegister] = useState(false);\n  \n\n  useEffect(() => {\n    // value login is updated from loginStatus\n    // login == 2 denotes user logged in successfully\n    if(login === 2) {\n      // now all page can understand, a user is logged in\n      setLoginStatus(1);\n      // after a successful login, we set local state `login`'s value to 0\n      // so that the component will unmount\n      setLogin(0);\n    }\n\n    // login === -1 denotes, a user logged out successfully\n    // if a user logged out then we set the value of login to 0\n    // so that login component doesn't mount\n    if(login === -1) {\n      setLogin(0);\n    }\n  }, [login, setLoginStatus, setLogin]);\n\n\n  const loginClicked = () => {\n    setRegister(false);\n    // conditional toggling\n    login ? setLogin(0) : setLogin(1);\n  }\n\n  const registerClicked = () => {\n    setLogin(0);\n    register ? setRegister(false) : setRegister(true);\n  }\n\n  return (\n    <div className=\"homepage\">\n      \n        <div className=\"row\">\n\n          <div className=\"col-md-6\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <h1 style={{fontFamily: \"Noto Serif\"}}>Photo Poll</h1>\n              </div>\n            </div>\n\n            <div className=\"row\" style={{marginTop: \"10%\"}}>\n              <div className=\"col-md-12\">\n                <img src={pic} alt=\"homepage\" style={{width: \"100%\", height: \"100%\"}} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card card-body text-center\" style={{backgroundColor: \"transparent\"}}>\n              <div className=\"btn-group\">\n                <button className=\"btn btn-primary\" onClick={loginClicked}>Log In</button>\n                <button className=\"btn btn-info\" onClick={registerClicked}>Register</button>\n              </div>\n              <br />\n            </div>\n\n            <div className=\"mt-4\">\n              {login ? <Login login={login} setLogin={setLogin} register={register} setRegister={setRegister} user={user} setUser={setUser} /> : null}\n              {register ? <Register login={login} setLogin={setLogin} register={register} setRegister={setRegister} /> : null}\n            </div>\n          </div>\n\n        </div>\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction ErrorItem({message}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n    }\n\n    if(!closeAlert) {\n        return (\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ErrorItem;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ErrorItem from \"./error.component\";\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction VoteForm({ vote, setVote }) {\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    const history = useHistory();\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.pollId) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll ID']);\n        }\n        if(!values.pollPasscode) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll Passcode']);\n        }\n        \n\n    }\n\n    // formik setup\n    const formik = useFormik({\n        initialValues: {\n            pollId: '',\n            pollPasscode: ''\n        },\n        validate,\n        // validation will be happened during submission\n        validateOnChange: false,\n        validateOnBlur: false,\n        isValidating: true,\n        onSubmit: values => {\n            if(errorMessages.length === 0) {\n                let poll = {\n                    pollId: values.pollId,\n                    pollPasscode: values.pollPasscode\n                };\n\n                axios.post('/api/vote/enter', poll)\n                    .then(res => {\n                        let responseData = res.data;\n                        // if we had some error during entering into a poll\n                        // from server we'll receive a json object with 'message' property\n                        if (responseData.hasOwnProperty('message')) {\n                            setErrorMessages(errorMessages => [...errorMessages, responseData['message']]);\n                        }\n                        // other wise the entering is successful\n                        else {\n                            // successful entering\n                            history.push(`/vote/${responseData._id}`);\n                        }\n                    })\n            }\n        }\n    })\n\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n\n                {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n                <div className=\"form-group\">\n                    <label htmlFor=\"pollId\">Poll ID</label>\n                    <input type=\"text\" id=\"pollId\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.pollId}></input>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"pollPasscode\">Poll Passcode</label>\n                    <input type=\"text\" id=\"pollPasscode\" className=\"form-control\" onChange={formik.handleChange} value={formik.values.pollPasscode}></input>\n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Enter</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\n\nexport default VoteForm;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport \"../styles/imageGallery.css\";\n\n\nfunction ShowFiles({ files, setFiles, showModal, setShowModal, formik }) {\n\n    // on remove file we remove file from fileList state\n    // and also remove file from formik \"images\" field\n    const removeFile = (fileIndex) => {\n      var array = [...files];\n      array.splice(fileIndex, 1);\n      setFiles([...array]);\n      formik.setFieldValue(\"images\", [...array]);\n    }\n\n    return (\n        <div>\n            {/*animation={false} for avoid a warning*/}\n            <Modal show={showModal} onHide={() => setShowModal(!showModal)} animation={false} centered>\n\n              <Modal.Header closeButton>\n              </Modal.Header>\n\n              <Modal.Body>\n              <div className=\"gallery\">\n                    {files.map((file, index) => {\n                        return (\n                            <div key={index} className=\"mb-3\" id=\"photo\">\n                                <div className=\"card\">\n                                    <img className=\"img-fluid\" src={file.preview} alt={`image_${index}`} />\n                                    <button className=\"btn\" onClick={() => removeFile(index)}><i className=\"fa fa-trash-o\" /> Remove</button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                {files.length === 0 ? <h6>No files added yet</h6> : null}\n              </Modal.Body>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ShowFiles;","import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useDropzone } from 'react-dropzone';\nimport { ProgressBar } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// font awesome source: https://stackoverflow.com/a/44985218/9481106\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"../styles/createPoll.css\";\n\nimport ErrorItem from \"./error.component\";\nimport ShowFiles from \"./files.component\";\n\n// resource that helped a lot for react-dropzone\n// https://blog.logrocket.com/create-a-drag-and-drop-component-with-react-dropzone/\n\n\nfunction ErrorMessages({ messages }) {\n\n    return(\n        <div>\n            {messages.map((em, index) => {\n                return <ErrorItem key={index} message={em} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction CreatePoll({ loginStatus, setLoginStatus, poll, setPoll }) {\n\n\n    const [errorMessages, setErrorMessages] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [showModal, setShowModal] = useState(false);\n    const [submit, setSubmit] = useState(false);\n\n\n\n    // form validation\n    const validate = values => {\n        // initialize validation with empty array\n        setErrorMessages(errorMessages => []);\n\n        if(!values.pollTitle) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Please enter a Poll Title']);\n            setSubmit(false);\n        }\n        if(values.pollId.length < 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Poll Id should have at least 3 characters']);\n            setSubmit(false);\n        }\n        if(values.pollPasscode.length < 3) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Poll Passcode should have at least 3 characters']);\n            setSubmit(false);\n        }\n        if(values.maxVoteLimit === 0) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Maximum Vote Limit can not be 0']);\n            setSubmit(false);\n        }\n        if(values.startDate.getTime() === values.endDate.getTime()) {\n            setErrorMessages(errorMessages => [...errorMessages, \"Start Date and End Date can't be equal\"]);\n            setSubmit(false);\n        }\n        if(values.startDate.getTime() > values.endDate.getTime()) {\n            setErrorMessages(errorMessages => [...errorMessages, \"Start Time can't be greater than End Time\"]);\n            setSubmit(false);\n        }\n        if(values.maxVoteLimit > values.images.length) {\n            setErrorMessages(errorMessages => [...errorMessages, 'Maximum Vote Limit can not be larger than uploaded images']);\n            setSubmit(false);\n        }\n        if(values.images === null || values.images.length < 2) {\n          setErrorMessages(errorMessages => [...errorMessages, \"Please upload 2 or more files\"]);\n          setSubmit(false);\n        }\n    }\n\n\n    // formik setup\n    const formik = useFormik({\n      initialValues: {\n        pollTitle: '',\n        pollId: '',\n        pollPasscode: '',\n        maxVoteLimit: 0,\n        // set to midnight\n        // source: https://stackoverflow.com/a/30100627/9481106\n        startDate: new Date(new Date().setHours(0,0,0,0)),\n        endDate: new Date(new Date().setHours(0,0,0,0)),\n        images: null\n      },\n      validate,\n      // validation will be happened during submission\n      validateOnChange: false,\n      validateOnBlur: false,\n      isValidating: true,\n      onSubmit: values => {\n        if(errorMessages.length === 0) {\n\n          setSubmit(true);\n\n          var formData = new FormData();\n          formData.append(\"pollTitle\", values.pollTitle);\n          formData.append(\"pollId\", values.pollId);\n          formData.append(\"pollPasscode\", values.pollPasscode);\n          formData.append(\"maxVoteLimit\", values.maxVoteLimit);\n          formData.append(\"startDate\", values.startDate);\n          formData.append(\"endDate\", values.endDate);\n          \n          for(var i = 0; i < values.images.length; i++) {\n            formData.append(`images[${i}]`, values.images[i], values.images[i].name);\n          }\n\n          // source: https://stackoverflow.com/a/43014086/9481106\n          axios.post('/api/poll/create', formData, \n                          { \n                            headers: {'content-type': 'multipart/form-data'},\n                            // calculating upload progress\n                            onUploadProgress: (progressEvent) => {\n                              const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n                              setUploadProgress(uploadPercentage);\n                            }\n                          })\n              // poll created successfully\n              .then(res => {\n                // after poll created successfully\n                // setPoll value to 2, to unmount createPoll component\n                // loginStatus to 5, to display flash message\n                setPoll(2);\n                setLoginStatus(5);\n              })\n              .catch(err => setErrorMessages(errorMessages => [...errorMessages, 'Poll Id already taken, please use a new one']));\n        }\n      }\n    });\n\n\n    // react-dropzone setup\n\n    // On drop file in the field, we update fileList state\n    // and add files to formik \"images\" field\n    const onDrop = useCallback(acceptedFiles => {\n      // file preview source: https://github.com/react-dropzone/react-dropzone/tree/master/examples/previews\n      acceptedFiles.forEach(file => {\n        Object.assign(file, {preview: URL.createObjectURL(file)});\n        setFiles(files => [...files, file]);\n      });\n\n      formik.setFieldValue(\"images\", [...files, ...acceptedFiles]);\n    }, [files, formik]);\n\n    \n    // non images are bounced\n    const onDropRejected = useCallback(rejectedFiles => {\n      alert(`Non image files are ignored!`);\n    }, []);\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, onDropRejected, accept: 'image/*'});\n\n    \n\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n\n          {errorMessages.length ? <ErrorMessages messages={errorMessages} /> : null}\n\n          <div className=\"form-group\">\n              <label htmlFor=\"pollTitle\">Poll Title</label>\n              <input type=\"text\" id=\"pollTitle\" className=\"form-control\" value={formik.values.pollTitle} onChange={formik.handleChange}/>\n          </div>\n\n          <div className=\"form-row\"> \n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"pollId\">Poll ID</label>\n                <input type=\"text\" id=\"pollId\" className=\"form-control\" value={formik.values.pollId} onChange={formik.handleChange}/>\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"pollPasscode\">Poll Passcode</label>\n                <input type=\"text\" id=\"pollPasscode\" className=\"form-control\" value={formik.values.pollPasscode} onChange={formik.handleChange} />\n              </div>\n              <div className=\"form-group col-md-4\">\n                <label htmlFor=\"maxVoteLimit\">Maximum Vote Limit</label>\n                <input type=\"number\" id=\"maxVoteLimit\" className=\"form-control\" value={formik.values.maxVoteLimit} onChange={formik.handleChange} />\n              </div>\n          </div>\n\n          <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"startDate\">Start Date</label>\n                <br />\n                {/*handling DatePicker with Formik*/}\n                {/* source: https://stackoverflow.com/a/52273407/9481106*/}\n                <DatePicker id=\"startDate\" className=\"form-control\" value={formik.values.startDate} selected={formik.values.startDate} onChange={date => formik.setFieldValue(\"startDate\", date)} showTimeSelect />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label htmlFor=\"endDate\">End Date</label>\n                <br />\n                <DatePicker id=\"endDate\" className=\"form-control\" value={formik.values.endDate} selected={formik.values.endDate} onChange={date => formik.setFieldValue(\"endDate\", date)} showTimeSelect />\n              </div>\n          </div>\n\n          {/* Drag and Drop section */}\n          <div className=\"form-group\">\n            <label htmlFor=\"images\">Upload Images</label>\n            <div className={\"form-control dnd \" + (isDragActive ? \"dnd-focus\" : \"\") } {...getRootProps()}>\n              {/* source: https://stackoverflow.com/a/56161034/9481106 */}\n              <input {...getInputProps()} type=\"file\" id=\"images\" name=\"images\" \n                     onChange={event => {\n                                  formik.setFieldValue(\"images\", event.currentTarget.files);\n                                  var acceptedFiles = Array.from(event.currentTarget.files);\n                                  acceptedFiles.forEach(file => {\n                                    Object.assign(file, {preview: URL.createObjectURL(file)});\n                                    setFiles(files => [...files, file]);\n                                  });\n                                }\n                              } \n                      multiple />\n              <div className=\"icon mt-2 mb-2\">\n                <i className=\"fa fa-5x fa-align-justify fa-upload\" aria-hidden=\"true\"></i>\n              </div>\n              <p align=\"center\">Drop images here or click to upload</p>\n            </div>\n          </div>\n\n          \n          <div className=\"form-group\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => setShowModal(!showModal)} style={{color: \"#212529\"}}>{files.length} files added</button>\n                {showModal ? <ShowFiles files={files} setFiles={setFiles} showModal={showModal} setShowModal={setShowModal} formik={formik} /> : null}\n              </div>\n              <div className=\"col\" align=\"right\">\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => {setFiles([]); formik.setFieldValue(\"images\", []);}} style={{color: \"#212529\"}}>Clear files</button>\n              </div>\n            </div>\n          </div>\n\n          {uploadProgress ?\n              <div className=\"form-group\">\n                  <ProgressBar now={uploadProgress} label={`${uploadProgress}%`} variant={\"info\"}/>\n              </div>\n                      :\n              null\n          }\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-info btn-block\" onClick={formik.handleSubmit} disabled={submit} >Create Poll</button>\n          </div>\n\n        </div>\n      </form>\n    );\n}\n\n\nexport default CreatePoll;","import React from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction PollCard({ loginStatus, setLoginStatus, id, pollTitle, pollId, startDate, endDate }) {\n\n    const history = useHistory();\n\n    const openPoll = () => {\n        history.push(`/poll/${id}`);\n    }\n\n    const deletePoll = () => {\n        axios.delete(`/api/poll/${id}`)\n                .then(res => {\n                    // if got 'Poll deleted' server response\n                    if(res.data === 'Poll deleted') {\n                        // after a poll deleted successfully\n                        // setLoginStatus = 6\n                        setLoginStatus(6);\n                    }\n                });\n    }\n\n    return (\n        <div className=\"card\" style={{backgroundColor: \"transparent\"}}>\n            <div className=\"card-header\">\n                <h5 className=\"card-title\">{pollTitle}</h5>\n                <h6 className=\"card-subtitle mb-2 text-muted\">{pollId}</h6>\n            </div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">Start: {startDate.toDateString()}</p>\n                <p className=\"card-text\">End: {endDate.toDateString()}</p>\n            </div>\n            <div className=\"card-footer text-center\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button className=\"btn btn-sm\" onClick={openPoll}><i className=\"fa fa-external-link\"></i> Open</button>\n                    </div>\n                    <div className=\"col\">\n                        <button className=\"btn btn-sm\" onClick={deletePoll}><i className=\"fa fa-trash-o\" /> Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PollCard;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport PollCard from './card.component';\n\n\n// we will pass 4 polls to render in a row\n\nfunction CardRow({ loginStatus, setLoginStatus, polls }) {\n\n    return(\n        <div className=\"row\">\n            <div className=\"col-lg-3 mb-4\">            \n                {/*if 1 poll exists*/}\n                {0 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[0]._id} pollTitle={polls[0].pollTitle} pollId={polls[0].pollId} startDate={new Date(polls[0].startDate)} endDate={new Date(polls[0].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">                  \n                {/*if 2 polls exist*/}\n                {1 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[1]._id} pollTitle={polls[1].pollTitle} pollId={polls[1].pollId} startDate={new Date(polls[1].startDate)} endDate={new Date(polls[1].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">\n                {/*if 3 polls exist*/}\n                {2 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[2]._id} pollTitle={polls[2].pollTitle} pollId={polls[2].pollId} startDate={new Date(polls[2].startDate)} endDate={new Date(polls[2].endDate)} /> :\n                    null\n                }\n            </div>\n            <div className=\"col-lg-3 mb-4\">\n                {/*if 4 polls exist*/}\n                {3 < polls.length ? \n                    <PollCard loginStatus={loginStatus} setLoginStatus={setLoginStatus} id={polls[3]._id} pollTitle={polls[3].pollTitle} pollId={polls[3].pollId} startDate={new Date(polls[3].startDate)} endDate={new Date(polls[3].endDate)} /> :\n                    null\n                }\n           </div>\n        </div>        \n    );\n}\n\n\nexport default CardRow;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction SuccessItem({ loginStatus, setLoginStatus, messages, setMessages}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n\n        // back to normal state again\n        // and clearning messages\n        setLoginStatus(2);\n        setMessages([]);\n    }\n\n    if(!closeAlert) {\n\n        return (\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                {messages}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default SuccessItem;","import React, { useState } from 'react';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction WarningItem({ loginStatus, setLoginStatus, messages, setMessages}) {\n\n    const [closeAlert, setCloseAlert] = useState(false);\n\n    const handleClose = () => {\n        setCloseAlert(true);\n\n        // back to normal state again\n        // and clearning messages\n        setLoginStatus(2);\n        setMessages([]);\n    }\n\n    if(!closeAlert) {\n\n        return (\n            <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\n                {messages}\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default WarningItem;","import React, { useState, useEffect } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport CardRow from './cards.component';\nimport SuccessItem from './success.component';\nimport WarningItem from './warning.component';\n\n\nfunction SuccessMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <SuccessItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\nfunction WarningMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <WarningItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\n\n\n\nfunction DashboardBody({ loginStatus, setLoginStatus, polls }) {\n\n    const [successMessage, setSuccessMessage] = useState([]);\n    const [warningMessage, setWarningMessage] = useState([]);\n\n    useEffect(() => {\n\n        // loginStatus 4 denotes vote successfully completed\n        // this value was set in /vote.component/open.component\n        if(loginStatus === 4) {\n            setSuccessMessage(successMessage => [...successMessage, 'Vote completed successfully']);\n        }\n\n        // loginStatus 5 denotes a poll successfully created\n        // this value was set in /dashboard.component/create.component\n        if(loginStatus === 5) {\n            setSuccessMessage(successMessage => [...successMessage, 'Poll created successfully']);\n        }\n\n        //loginStatus 6 denotes a poll successfully deleted\n        // this value was set in /dashboard.component/card.component\n        if(loginStatus === 6) {\n            setWarningMessage(warningMessage => [...warningMessage, 'Poll deleted successfully']);\n        }\n\n    }, [loginStatus]);\n    \n\n    // passing 4 polls at a time\n    // CardRow will contain 4 polls in a row\n    var pollCards = [];\n    for (var i = 0; i < polls.length; i+=4) {\n        var start = i;\n        var end = i + 4;\n        end > polls.length ? end = polls.length : end = i + 4;\n\n        var key = [];\n        for(var j = start; j < end; j++) {\n            key.push(j);\n        }\n\n        pollCards.push(<CardRow loginStatus={loginStatus} setLoginStatus={setLoginStatus} key={i} polls={polls.slice(start, end)} />);\n    }\n\n    return (\n        <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            {successMessage.length ? <SuccessMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={successMessage} setMessages={setSuccessMessage} /> : null}\n            {warningMessage.length ? <WarningMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={warningMessage} setMessages={setWarningMessage} /> : null}\n            {pollCards}\n        </div>\n    );\n}\n\n\nexport default DashboardBody;","import React, { useState, useEffect } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport SuccessItem from './success.component';\nimport WarningItem from './warning.component';\n\n\nfunction SuccessMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <SuccessItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\nfunction WarningMessages({ loginStatus, setLoginStatus, messages, setMessages }) {\n\n    return(\n        <div>\n            {messages.map((msg, index) => {\n                return <WarningItem key={index} loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={msg} setMessages={setMessages} />;\n            })}\n        </div>\n    );\n}\n\n\n\nfunction EmptyDashboard({ loginStatus, setLoginStatus }) {\n\n    const [successMessage, setSuccessMessage] = useState([]);\n    const [warningMessage, setWarningMessage] = useState([]);\n\n    useEffect(() => {\n        // loginStatus 4 denotes vote successfully completed\n        // this value was set in /vote.component/open.component\n        if(loginStatus === 4) {\n            setSuccessMessage(successMessage => [...successMessage, 'Vote completed successfully']);\n        }\n\n        // loginStatus 5 denotes a poll successfully created\n        // this value was set in /dashboard.component/create.component\n        if(loginStatus === 5) {\n            setSuccessMessage(successMessage => [...successMessage, 'Poll created successfully']);\n        }\n\n        //loginStatus 6 denotes a poll successfully deleted\n        // this value was set in /dashboard.component/card.component\n        if(loginStatus === 6) {\n            setWarningMessage(warningMessage => [...warningMessage, 'Poll deleted successfully']);\n        }\n\n    }, [loginStatus]);\n\n\n    return (\n        <div className=\"card card-body mh-100 text-center\" style={{backgroundColor: \"transparent\"}}>\n            {successMessage.length ? <SuccessMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={successMessage} setMessages={setSuccessMessage} /> : null}\n            {warningMessage.length ? <WarningMessages loginStatus={loginStatus} setLoginStatus={setLoginStatus} messages={warningMessage} setMessages={setWarningMessage} /> : null}\n            <h4 style={{color: \"#385482\"}} className=\"mt-5 mb-5\">No polls to display!</h4>\n        </div>\n    );\n\n}\n\nexport default EmptyDashboard;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nimport VoteForm from \"./dashboard.components/vote.component\";\nimport CreatePoll from \"./dashboard.components/create.component\";\nimport DashboardBody from \"./dashboard.components/dashboard.component\";\nimport EmptyDashboard from \"./dashboard.components/empty.component\";\n\n\nfunction Dashboard({ loginStatus, setLoginStatus, user, setUser }) {\n\n  const [vote, setVote] = useState(0);\n  const [poll, setPoll] = useState(0);\n  const [polls, setPolls] = useState([]);\n  const history = useHistory();\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access dashboard\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/poll', {\n          cancelToken: source.token\n        });\n        setPolls(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          // do nothing\n        }\n      }\n      \n    }\n\n    fetchData();\n\n\n    // after a poll successfully created, unmount create poll component\n    if(poll === 2) {\n      setPoll(0);\n    }\n\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, [loginStatus, setLoginStatus, history, poll, polls]);   // included  values to avoid warning\n\n\n\n  const voteForm = () => {\n    vote === 1 ? setVote(0) : setVote(1);\n    setPoll(0);\n  }\n\n\n\n  const createPoll = () => {\n    poll === 1 ? setPoll(0) : setPoll(1);\n    setVote(0);\n  }\n\n\n\n  const logOut = () => {\n    axios.get('/api/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // also set user object to empty {}\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n    <div className=\"container\">\n      {/*nav bar*/}\n      <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n        <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n          <p className=\"navbar-brand\"> Dashboard for {user.name} </p>\n          <div className=\"btn-group\">\n            <button onClick={voteForm} className=\"btn btn-outline-primary\">Vote</button>\n            <button onClick={createPoll} className=\"btn btn-outline-info\">Create</button>\n            <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n          </div>\n        </nav>\n      </div>\n\n\n      <div>\n        {vote ? <VoteForm vote={vote} setVote={setVote} /> : null}\n      </div>\n\n\n      <div>\n        {poll ? <CreatePoll loginStatus={loginStatus} setLoginStatus={setLoginStatus} poll={poll} setPoll={setPoll} /> : null}\n      </div>\n\n\n      <div className=\"content-body mb-4\">\n        {polls.length ? \n          <DashboardBody loginStatus={loginStatus} setLoginStatus={setLoginStatus} polls={polls} /> : \n          <EmptyDashboard loginStatus={loginStatus} setLoginStatus={setLoginStatus} />\n        }\n      </div>\n\n\n      <footer>\n        <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n          <div className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}}>\n            <div>\n              <p>© 2020 Copyright: Haris Development</p>\n            </div>\n            <div>\n              <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-facebook-f\"></i></button>\n              <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-twitter\"></i></button>\n              <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-linkedin\"></i></button>\n              <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-instagram\"></i></button>\n            </div>\n          </div>\n        </div>\n      </footer>\n\n    </div>    \n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction ImageViewer({ show, setShow, images, index, setIndex }) {\n\n    return (\n        <div>\n          {/*animation={false} for avoid a warning*/}\n          <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n            <Modal.Header closeButton>\n              {/*update from here*/}\n              {\"Vote Recived: \" + images[index].votes.length}\n            </Modal.Header>\n\n            <Modal.Body>\n              <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n                { images.map((image, idx) => {\n                  return (\n                    <Carousel.Item key={idx}>\n                      <img className='img-fluid' src={`/api/poll/image/${image['src']}`} alt={`image_${idx}`}/>\n                    </Carousel.Item>\n                  );\n                }) }\n                </Carousel>\n            </Modal.Body>\n          </Modal>\n        </div>\n    );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport \"../styles/imageGallery.css\";\n\nimport ImageViewer from \"./viewer.component\";\n\n\n// photo gallery source: https://mdbootstrap.com/plugins/jquery/gallery/#filter\nfunction Gallery({ images }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx)\n    }\n\n    return (\n        <div>\n            <div className=\"gallery\">\n                {images.map((image, index) => {\n                    return (\n                        <div key={index} className=\"mb-3\" id=\"photo\">\n                            <img className=\"img-fluid\" onClick={() => openModal(index)} src={`/api/poll/image/${image['src']}`} alt={`image_${index}`} />\n                        </div>\n                    );\n                })}\n            </div>\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} images={images} index={index} setIndex={setIndex} /> : null}\n\n        </div>\n    );\n}\n\nexport default Gallery;","import React from 'react';\n// using dateformat to display nice format date\n// source: https://stackoverflow.com/a/3552496/9481106\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport Gallery from \"./gallery.component\";\n\n\nfunction OpenPoll({ poll, images }) {\n\n    const history = useHistory();\n\n    const getResult = () => {\n        history.push(`/poll/result/${poll._id}`);\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Id</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollId}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Passcode</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollPasscode}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                    </dl>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={getResult}>Result</button>\n                        </div>\n                    </div>\n                </div>\n\n                {images ? <Gallery images={images} /> : null}\n            </div>\n        </div>\n    );\n};\n\n\nexport default OpenPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport OpenPoll from './poll.components/open.component';\n\n\nfunction Poll({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [poll, setPoll] = useState({});\n  const history = useHistory();\n  const pollId = urlId;\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/api/poll/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, [history, loginStatus, pollId, setLoginStatus]);   // included  values to avoid warning\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n  const logOut = () => {\n    axios.get('/api/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div className=\"container\">\n        {/*nav bar*/}\n        <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n          <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n            <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n            <div className=\"btn-group\">\n              <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n              <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"content-body mb-4\">\n          <OpenPoll poll={poll} images={poll.imageList} />\n        </div>\n\n        <footer>\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <div className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}}>\n              <div>\n                <p>© 2020 Copyright: Haris Development</p>\n              </div>\n              <div>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-facebook-f\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-twitter\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-linkedin\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-instagram\"></i></button>\n              </div>\n            </div>\n          </div>\n        </footer>\n      \n    </div>\n    \n  );\n}\n\nexport default Poll;\n","import React from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction ImageViewer({ show, setShow, images, index, setIndex }) {\n\n    return (\n        <div>\n          {/*animation={false} for avoid a warning*/}\n          <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n            <Modal.Header closeButton>\n              <p>Points: {images[index].points} | Vote Recived: {images[index].votes}</p>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n                { images.map((image, idx) => {\n                  return (\n                    <Carousel.Item key={idx}>\n                      <img className='img-fluid' src={`/api/poll/image/${image['src']}`} alt={`image_${idx}`}/>\n                    </Carousel.Item>\n                  );\n                }) }\n                </Carousel>\n            </Modal.Body>\n          </Modal>\n        </div>\n    );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\n\nimport ImageViewer from \"./viewer.component\";\n\n\n\n// result image and text display source: https://stackoverflow.com/a/42252877/9481106\nfunction ResultGallery({ result }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx)\n    }\n\n    return (\n        <div>\n            {result.map((image, index) => {\n                return (\n                    <div className=\"card mb-3\" onClick={() => openModal(index)} style={{backgroundColor: \"transparent\"}} key={index}>\n                        <div className=\"row d-flex\">\n                            <div className=\"col-sm-6\">\n                                <img className=\"img-fluid\" src={`/api/poll/image/${image['src']}`} alt={`image_${index}`}/>\n                            </div>\n                            <div className=\"col-sm-6 align-self-center\">\n                                <h5>Points: {image.points}</h5>\n                                <h5>Votes Received: {image.votes}</h5>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} images={result} index={index} setIndex={setIndex} /> : null}\n        </div>\n    );\n}\n\nexport default ResultGallery;","import React from 'react';\n// using dateformat to display nice format date\n// source: https://stackoverflow.com/a/3552496/9481106\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport ResultGallery from \"./gallery.component\";\n\n\nfunction ResultPoll({ poll, result }) {\n\n    const history = useHistory();\n\n    const getPoll = () => {\n        history.push(`/poll/${poll._id}`);\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Id</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollId}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Poll Passcode</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{poll.pollPasscode}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                    </dl>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={getPoll}>Poll</button>\n                        </div>\n                    </div>\n                </div>\n\n                \n                {result ? <ResultGallery result={result} /> : null}\n                \n            </div>\n        </div>\n    );\n};\n\n\nexport default ResultPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport ResultPoll from './result.components/result.component';\n\n\nfunction Result({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [poll, setPoll] = useState({});\n  const history = useHistory();\n  const pollId = urlId;\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `polls` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/api/poll/result/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, [history, loginStatus, pollId, setLoginStatus]);   // included  values to avoid warning\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n  const logOut = () => {\n    axios.get('/api/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div className=\"container\">\n        {/*nav bar*/}\n        <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n          <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n            <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n            <div className=\"btn-group\">\n              <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n              <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n            </div>\n          </nav>\n        </div>\n\n\n        <div className=\"content-body mb-4\">\n          <ResultPoll poll={poll} result={poll.result} />\n        </div>\n\n\n        <footer>\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <div className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}}>\n              <div>\n                <p>© 2020 Copyright: Haris Development</p>\n              </div>\n              <div>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-facebook-f\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-twitter\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-linkedin\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-instagram\"></i></button>\n              </div>\n            </div>\n          </div>\n        </footer>\n\n    </div>\n    \n  );\n}\n\nexport default Result;\n","import React from 'react';\nimport { Modal, Carousel } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nfunction ImageViewer({ show, setShow, index, setIndex, images, setImages, votes, setVotes, votesLeft, setVotesLeft }) {\n\n  const increaseVote = () => {\n    if(votesLeft > 0) {\n      var v = [...votes];\n      v[index] = Math.max(...votes) + 1;\n      setVotes(v);\n      setVotesLeft(votesLeft-1);\n    }\n  }\n\n\n  return (\n      <div>\n        {/*animation={false} for avoid a warning*/}\n        <Modal show={show} onHide={() => setShow(!show)} animation={false} centered>\n\n          <Modal.Header closeButton>\n            <button type=\"button\"\n                    className=\"btn btn-primary btn-block\" \n                    disabled={(votes[index] || !votesLeft) ? true : false}\n                    onClick={increaseVote} >\n              {/*if the image is not voted and votes left still then button value should be MaxVote+1\n                 if the image is not voted and no votes left, buttion value should be 'No vote left'\n                 else button value currentVote*/}\n              {!votes[index] ? (votesLeft ? Math.max(...votes) + 1 : 'No vote left') : votes[index]}\n            </button>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Carousel activeIndex={index} onSelect={(i, e) => setIndex(i)} slide={false} indicators={false} interval={null}>\n              { images.map((image, idx) => {\n                return (\n                  <Carousel.Item key={idx}>\n                    <img className='img-fluid' src={`/api/poll/image/${image['src']}`} alt={`image_${idx}`}/>\n                  </Carousel.Item>\n                );\n              }) }\n              </Carousel>\n          </Modal.Body>\n        </Modal>\n      </div>\n  );\n}\n\nexport default ImageViewer;","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport \"../styles/imageGallery.css\";\n\n\nimport ImageViewer from \"./viewer.component\";\n\n\n\n// photo gallery source: https://mdbootstrap.com/plugins/jquery/gallery/#filter\nfunction Gallery({ imageList, maxVoteLimit, votes, setVotes, votesLeft, setVotesLeft }) {\n\n    const [modal, setModal] = useState(false);\n    const [index, setIndex] = useState(0);\n    const [images, setImages] = useState(imageList);\n\n\n    const openModal = (idx) => {\n        setModal(!modal);\n        setIndex(idx);\n    }\n\n    return (\n        <div>\n            <div className=\"gallery\">\n                {images.map((image, index) => {\n                    return (\n                        <div key={index} className=\"mb-3\" id=\"photo\">\n                            <img className=\"img-fluid\" onClick={() => openModal(index)} src={`/api/poll/image/${image['src']}`} alt={`image_${index}`} />\n                        </div>\n                    );\n                })}\n            </div>\n\n            {modal ? <ImageViewer show={modal} setShow={setModal} \n                                  index={index} setIndex={setIndex} \n                                  images={images} setImages={setImages} \n                                  votes={votes} setVotes={setVotes}\n                                  votesLeft={votesLeft} setVotesLeft={setVotesLeft} /> \n                    : null}\n\n        </div>\n    );\n}\n\nexport default Gallery;","import React from 'react';\nimport axios from 'axios';\nimport dateformat from 'dateformat';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Gallery from \"./gallery.component\";\n\n\nfunction OpenPoll({ loginStatus, setLoginStatus, poll, imageList, votes, setVotes, reset, setReset, votesLeft, setVotesLeft }) {\n\n    const history = useHistory();\n\n    const submitVotes = () => {\n\n        // vote backend\n        axios.post(`/api/vote/poll/${poll._id}`, votes)\n            .then(res => {\n                // loginStatus 4 denotes, a vote complete successfully\n                setLoginStatus(4);\n                history.push('/dashboard');\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n\n    return (\n        <div>\n            <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n                {/*disable card border.\n                source: https://stackoverflow.com/a/53128227/9481106*/}\n                <div className=\"card border-0 mb-4\" style={{backgroundColor: \"transparent\"}}>\n                    <dl className=\"row\">\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Start Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.startDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n                        \n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>End Date</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{dateformat(poll.endDate, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</span></dd>\n\n                        <dt className=\"col-md-2\"><span style={{\"fontSize\": \"1.2rem\"}}>Votes Left</span></dt>\n                        <dd className=\"col-md-9\"><span style={{\"fontSize\": \"1.2rem\"}}>{votesLeft}</span></dd>\n                    </dl>\n\n                    <div className=\"row mb-2\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={submitVotes}>Submit</button>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-block\" onClick={() => setReset(true)}>Reset</button>\n                        </div>\n                    </div>\n                </div>            \n\n                {imageList ? \n                            <Gallery imageList={imageList} maxVoteLimit={poll.maxVoteLimit}\n                                      votes={votes} setVotes={setVotes}\n                                      votesLeft={votesLeft} setVotesLeft={setVotesLeft} />\n                            :\n                            null\n                }\n\n            </div>\n        </div>\n    );\n};\n\n\nexport default OpenPoll;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport OpenPoll from './vote.components/open.component';\n\n\nfunction Vote({ loginStatus, setLoginStatus, user, setUser }) {\n\n  let urlId = useLocation().pathname.slice(useLocation().pathname.lastIndexOf(\"/\")+1);\n\n  const [poll, setPoll] = useState({});\n  const [votes, setVotes] = useState([]);\n  const [reset, setReset] = useState(false);\n  const [votesLeft, setVotesLeft] = useState(0);\n\n  const [maxVoteLimit, setMaxVoteLimit] = useState(0);\n  const [imageListLength, setImageListLength] = useState(0);\n\n  const history = useHistory();\n\n  const pollId = urlId;\n\n\n  useEffect(() => {\n    \n    if(loginStatus === 0) {\n      // unauthorized user tried to access poll\n      setLoginStatus(3);\n      history.push('/');\n    }\n\n\n    // we'll use axios token cancelation because\n    // even after redirecting to some different location\n    // axios will try to set `response` value that causes an error\n    // source: https://www.youtube.com/watch?v=_TleXX0mxaY\n    let source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/api/vote/poll/${pollId}`, {\n          cancelToken: source.token\n        });\n        setPoll(response.data);\n        // array initialization with 0s: https://stackoverflow.com/a/34104348/9481106\n        setVotes(Array(response.data.imageList.length).fill(0));\n        setVotesLeft(response.data.maxVoteLimit);\n        setMaxVoteLimit (response.data.maxVoteLimit);\n        setImageListLength(response.data.imageList.length);\n      }\n      catch (error) {\n        if(axios.isCancel(error)) {\n          // console.log('caught cancel');\n        }\n        else {\n          throw error;\n        }\n      }\n      \n    }\n\n    fetchData();\n\n\n    // if user reset given votes\n    // this option is updated in open.component.js\n    if(reset) {\n      setReset(false);\n      setVotesLeft(maxVoteLimit);\n      setVotes(Array(imageListLength));\n    }\n\n\n\n    // clean up function for canceling axios request\n    return () => {\n      source.cancel();\n    }\n\n  }, [history, pollId, loginStatus, setLoginStatus, reset, setReset, maxVoteLimit, imageListLength]);   // included  values to avoid warning\n\n\n\n  const dashboard = () => {\n    history.push(\"/dashboard\");\n  }\n\n\n\n  const logOut = () => {\n    axios.get('/api/user/logout')\n        .then(res => {\n          // after successful logout loginStatus become -1\n          // empty the user data\n          setLoginStatus(-1);\n          setUser({});\n          history.push('/');\n        })\n        .catch(err => {\n          console.log(err)\n        });\n  }\n\n\n  return (\n\n    <div className=\"container\">\n        {/*nav bar*/}\n        <div className=\"card card-body mb-4\" style={{backgroundColor: \"transparent\"}}>\n          <nav className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}} >\n            <h4 className=\"navbar-brand\">{poll.pollTitle}</h4> \n            <div className=\"btn-group\">\n              <button onClick={dashboard} className=\"btn btn-outline-primary\">Dashboard</button>\n              <button onClick={logOut} className=\"btn btn-outline-danger\">Log Out</button>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"content-body mb-4\">\n          <OpenPoll loginStatus={loginStatus} setLoginStatus={setLoginStatus}\n                    poll={poll} imageList={poll.imageList} \n                    votes={votes} setVotes={setVotes}\n                    reset={reset} setReset={setReset}\n                    votesLeft={votesLeft} setVotesLeft={setVotesLeft} />\n        </div>\n\n        <footer>\n          <div className=\"card card-body\" style={{backgroundColor: \"transparent\"}}>\n            <div className=\"navbar navbar-light\" style={{\"backgroundColor\": \"#e3f2fd\"}}>\n              <div>\n                <p>© 2020 Copyright: Haris Development</p>\n              </div>\n              <div>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-facebook-f\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-twitter\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-linkedin\"></i></button>\n                <button className=\"btn btn-link btn-lg\" type=\"button\"><i className=\"fa fa-instagram\"></i></button>\n              </div>\n            </div>\n          </div>\n        </footer>\n    </div>\n    \n  );\n}\n\nexport default Vote;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import 'bootswatch/dist/superhero/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nimport Poll from \"./Poll\";\nimport Result from \"./Result\";\nimport Vote from \"./Vote\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n\n  const [login, setLogin] = useState(0);\n  const [user, setUser] = useState({});\n\n  return (\n    <Router>\n      <Route exact path=\"/\" component={() => <Home loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser}/>} />\n      <Route exact path=\"/dashboard\" \n              component={() => <Dashboard loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser}/>} />\n      <Route exact path=\"/poll/:id\" component={() => <Poll loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n      <Route exact path=\"/poll/result/:id\" component={() => <Result loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n      <Route exact path=\"/vote/:id\" component={() => <Vote loginStatus={login} setLoginStatus={setLogin} user={user} setUser={setUser} />} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}